"""
Fixtures for unit testing convert_shap_to_plotly.py.
"""
# Standard Library imports
import random

SINGLE_ROW_SHAP_VALUES = [[0.02683376917256839, -0.026833769172568404],
                            [0.007946064235263384, -0.007946064235263325],
                            [0.013732998921744122, -0.013732998921744188],
                            [0.0, 0.0],
                            [-0.011453104206025511, 0.011453104206025657],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-0.001981314023240854, 0.001981314023240785],
                            [-0.003980496272627321, 0.003980496272627365],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-0.00014708680014231535, 0.0001470868001422876],
                            [8.822944290094447e-05, -8.822944290093893e-05],
                            [-0.0004987291609317324, 0.0004987291609317047],
                            [0.0, 0.0],
                            [-0.0001303687334437642, 0.0001303687334439585],
                            [4.896500619354649e-05, -4.896500619351041e-05],
                            [0.007610434794633303, -0.0076104347946330895],
                            [-0.0057772945339504165, 0.005777294533950606],
                            [0.021729769590887803, -0.021729769590887568],
                            [0.004732270155544549, -0.004732270155544627],
                            [0.0029503930710372385, -0.002950393071037419],
                            [-0.0001008133774625386, 0.0001008133774625275],
                            [-0.0005480504674894692, 0.0005480504674895192],
                            [0.013456817143734489, -0.013456817143734385],
                            [-0.0002219579117311854, 0.00022195791173122147],
                            [0.000774729938576002, -0.0007747299385759965],
                            [0.0, 0.0],
                            [9.60437108889156e-05, -9.604371088892672e-05],
                            [-0.00038321129762418636, 0.0003832112976242086],
                            [0.0, 0.0],
                            [-0.0020177960159650675, 0.002017796015965015],
                            [0.0008170199494662356, -0.0008170199494662328],
                            [-0.00026168708115528185, 0.00026168708115532067],
                            [1.3248536237864262e-05, -1.3248536237880915e-05],
                            [0.0, 0.0],
                            [-9.100885409050186e-05, 9.10088540904963e-05],
                            [-1.741933192391798e-05, 1.741933192390688e-05],
                            [0.0, 0.0],
                            [-2.9093862474971478e-05, 2.9093862474954825e-05],
                            [0.00044044494028171454, -0.00044044494028186166],
                            [0.0, 0.0],
                            [0.0222088412781696, -0.0222088412781695],
                            [-0.0059756362026737505, 0.005975636202673937],
                            [0.003018021777446256, -0.003018021777446242],
                            [0.006924406849823794, -0.006924406849823803],
                            [0.0006282017908526116, -0.0006282017908525422],
                            [0.002265166113665185, -0.0022651661136652234],
                            [-0.005082817030012543, 0.005082817030012459],
                            [0.005255047405293411, -0.005255047405293353],
                            [0.0039605507860516085, -0.0039605507860515895],
                            [-0.0062957558997135624, 0.0062957558997133265],
                            [0.043836493806900946, -0.043836493806900884],
                            [0.0009483896382054379, -0.0009483896382054408],
                            [-0.0003529731162671745, 0.00035297311626715787],
                            [-0.002531674514177085, 0.0025316745141770597],
                            [0.009128087836636633, -0.009128087836636609],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-0.0016430966874347308, 0.0016430966874347087]]

# Create mock SHAP explainer dataset
NUM_OF_ROWS = 5
EXPLAINER_X_DATA = {}
for i in range(1, len(SINGLE_ROW_SHAP_VALUES)+1):
    EXPLAINER_X_DATA[f"feature_{i}"] = [random.randint(1, 10) for i in range(NUM_OF_ROWS)]

# Create mock training dataset
TRAIN_X_DATA = {}
for i in range(1, len(SINGLE_ROW_SHAP_VALUES)+1):
    TRAIN_X_DATA[f"feature_{i}"] = [random.randint(1, 10) for i in range(NUM_OF_ROWS)]


test_get_shap_values_df_data = [(
    SINGLE_ROW_SHAP_VALUES,
    EXPLAINER_X_DATA
)]

test_get_shap_feature_importance_df_data = [(
    test_get_shap_values_df_data,
    {
        "feature_54": 0.043836493806900884,
        "feature_1": 0.026833769172568404,
        "feature_44": 0.0222088412781695,
        "feature_21": 0.021729769590887568,
        "feature_3": 0.013732998921744188,
        "feature_26": 0.013456817143734385,
        "feature_5": 0.011453104206025657,
        "feature_58": 0.009128087836636609,
        "feature_2": 0.007946064235263325,
        "feature_19": 0.0076104347946330895,
        "feature_47": 0.006924406849823803,
        "feature_53": 0.0062957558997133265,
        "feature_45": 0.005975636202673937,
        "feature_20": 0.005777294533950606,
        "feature_51": 0.005255047405293353,
        "feature_50": 0.005082817030012459,
        "feature_22": 0.004732270155544627,
        "feature_10": 0.003980496272627365,
        "feature_52": 0.0039605507860515895,
        "feature_46": 0.003018021777446242,
        "feature_23": 0.002950393071037419,
        "feature_57": 0.0025316745141770597,
        "feature_49": 0.0022651661136652234,
        "feature_33": 0.002017796015965015,
        "feature_9": 0.001981314023240785,
        "feature_61": 0.0016430966874347087,
        "feature_55": 0.0009483896382054408,
        "feature_34": 0.0008170199494662328,
        "feature_28": 0.0007747299385759965,
        "feature_48": 0.0006282017908525422,
        "feature_25": 0.0005480504674895192,
        "feature_15": 0.0004987291609317047,
        "feature_42": 0.00044044494028186166,
        "feature_31": 0.0003832112976242086,
        "feature_56": 0.00035297311626715787,
        "feature_35": 0.00026168708115532067,
        "feature_27": 0.00022195791173122147,
        "feature_13": 0.0001470868001422876,
        "feature_17": 0.0001303687334439585,
        "feature_24": 0.0001008133774625275,
        "feature_30": 9.604371088892672e-05,
        "feature_38": 9.10088540904963e-05,
        "feature_14": 8.822944290093893e-05,
        "feature_18": 4.896500619351041e-05,
        "feature_41": 2.9093862474954825e-05,
        "feature_39": 1.741933192390688e-05,
        "feature_36": 1.3248536237880915e-05,
        "feature_40": 0.0,
        "feature_60": 0.0,
        "feature_59": 0.0,
        "feature_4": 0.0,
        "feature_6": 0.0,
        "feature_29": 0.0,
        "feature_43": 0.0,
        "feature_7": 0.0,
        "feature_8": 0.0,
        "feature_12": 0.0,
        "feature_32": 0.0,
        "feature_16": 0.0,
        "feature_37": 0.0,
        "feature_11": 0.0
    }
)]

test_label_percentile_range_data = [(
    {
        "test_data": [
            {
                "feature": "feature_1",
                "feature_value": 0.4
            },
            {
                "feature": "feature_2",
                "feature_value": 0.6
            },
            {
                "feature": "feature_3",
                "feature_value": 0.8
            },
            {
                "feature": "feature_4",
                "feature_value": 2
            }
        ],
        "test_percentile_dict": {
            "feature_1": {
                "25%": 0.5,
                "50%": 0.7,
                "75%": 1.9
                },
            "feature_2": {
                "25%": 0.5,
                "50%": 0.7,
                "75%": 1.1
                },
            "feature_3": {
                "25%": 0.5,
                "50%": 0.7,
                "75%": 1.1
                },
            "feature_4": {
                "25%": 0.5,
                "50%": 0.7,
                "75%": 1.1
                }
            }
    },
    ["<25%", "25-50%", "50-75%", ">75%"]
)]

test_generate_beeswarm_plotly_figure_data = [(
    test_get_shap_values_df_data[0]
)]
